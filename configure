#!/bin/sh
#
#  FFS configure script
#

. $MAKL_DIR/cf/makl.init
makl_args_init "$@"

${ECHO} "MAKL_ETC is ${MAKL_ETC}"

##############################################################################
#
#  makl_compile uses CC to compile; if want CXX, use this.
#
#  param1   pathname of file
#  param2   arguments to be passed to compiler CXX
#
##############################################################################

makl_compile_cxx ()
{
  cc="${CC}"
  file="$1"
  shift

  CC="${CXX}"
  makl_compile "${file}" "$*"

  if [ $? -ne 0 ]; then
      return 1
  fi
  CC="${cc}"

  return 0
}

##############################################################################
#
#  Start configure process
#
##############################################################################

#
# --debug
#
makl_args_def "debug" "" "No -DDEBUG" "Add -DDEBUG to CFLAGS"
__makl_debug ()
{
    makl_append_var_mk "CFLAGS" "-g -DDEBUG"
}

#
#  --docs
#
makl_args_def "docs" "" "No doxygen" "Attempt to produce doxygen docs"
__makl_docs ()
{
    makl_optional      1    "featx"   "doxygen" "DOXYGEN"
}

# NOTE:
# Using a dash --u-path gives a macro "__makl_u" and $1 = "path",
# and $2 being the intended argument!

#
# --u-path=...
#
makl_args_def "u-path" "" "" "path to libu directory"
__makl_u ()
{
    makl_set_var_mk "UDIR" "$2"
    makl_set_var_mk "HAVE_LIBU" "1"
}

#
# --fftw-path
#
makl_args_def "fftw-path" "" "" "path to fftw directory"
__makl_fftw ()
{
    makl_set_var_mk "FFTWDIR" "$2"
    makl_set_var_mk "HAVE_FFTW" "1"
}

#
# --lammps-path=...
#
makl_args_def "lammps-path" "" "" "Specify path to find LAMMPS"
__makl_lammps ()
{
    makl_set_var_mk "LAMMPSDIR" "$2"
    makl_set_var_mk "HAVE_LAMMPS" "1"
}

makl_pkg_name "FFS"
makl_pkg_version


makl_args_handle "$@"

udir=`makl_get_var_mk "UDIR"`
${ECHO} "checking for libu in ${udir}"
 
makl_compile "build/libu.c" "-I${udir}/include" "-L${udir}/lib -lu"
[ $? == 0 ] || makl_err 1 "could not find libu in ${udir}"

makl_append_var_mk "CFLAGS" "-I${udir}/include"
makl_append_var_mk "LDFLAGS" "-L${udir}/lib -lu"

##############################################################################
#
# See if the compiler can compile and link build/libmpi.c
# and set HAVE_MPI if both compile and link ok.
#
# If HAVE_MPI is not set, we can still get by with the stub
# replacement MPI
#
##############################################################################

${ECHO} "checking ${CC} compiles and links an MPI program"
makl_compile "build/libmpi.c"

if [ $? == 0 ]
then
    makl_set_var_mk "HAVE_MPI" "1"
else
    # Try again with -lmpi
    ${ECHO} "...checking if -lmpi helps"
    makl_compile "build/libmpi.c" "" "-lmpi"
    if [ $? == 0 ]
    then
	makl_set_var_mk "HAVE_MPI" "1"
	makl_append_var_mk "LDFLAGS" "-lmpi"
    else
	${ECHO} "... use MPI stub library"
    fi
fi

##############################################################################
#
# Check FFTW (this is FFTW 2 for LAMMPS)
# We require an include directory  $fftwdir/include
# and a lib directory              $fftwdir/lib -lfftw
#
##############################################################################

fftw=`makl_get_var_mk "HAVE_FFTW"`
if [ $fftw ]
    then
    fftwdir=`makl_get_var_mk "FFTWDIR"`
    ${ECHO} "checking for FFTW in ${fftwdir}"
    makl_compile "build/fftw.c" "-I${fftwdir}/include" "-L${fftwdir}/lib -lfftw"
    [ $? == 0 ] || makl_err 1 "could not build fftw"
    makl_append_var_mk "LDFLAGS" "-L${fftwdir}/lib -lfftw"
else
    echo "No FFTW config (ok)"
fi

##############################################################################
#
# Check LAMMPS
# We require LAMMPS include directory  $lmpdir/include
# and a statically linked library      $lmpdir/lib -llammps
#
# The link is via CXX and -lstdc++
#
##############################################################################

lammps=`makl_get_var_mk "HAVE_LAMMPS"`

if [ $lammps ]
then
    lmpdir=`makl_get_var_mk "LAMMPSDIR"`
    libs=`makl_get_var_mk "LDFLAGS"`
    ${ECHO} "Looking for LAMMPS library in ${lmpdir}..."
    makl_compile_cxx "build/lammps.c" "-I${lmpdir}/include" \
	"-L${lmpdir}/lib -llammps -lstdc++ ${libs}"
    [ $? == 0 ] || makl_err 1 "could not compile LAMMPS test"
    makl_append_var_mk "CFLAGS" "-I${lmpdir}/include"
    makl_append_var_mk "LDFLAGS" "-L${lmpdir}/lib -llammps -lstdc++"
else
    ${ECHO} "No LAMMPS config (ok)"
fi

makl_append_var_mk "LDFLAGS" "-lm"


. $MAKL_DIR/cf/makl.term

